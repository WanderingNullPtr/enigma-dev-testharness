pr:  # Trigger a build on every PR.
  branches:
    include:
      - '*'  # Must quote since "*" is a YAML reserved character

jobs:
- job: TestHarnessWindows
  displayName: 'Test Harness Windows'
  variables:
    TEST_HARNESS: "true"
    TRAVIS_OS_NAME: "windows"
    TRAVIS: "true"
    TRAVIS_PULL_REQUEST: $(System.PullRequest.PullRequestNumber)
    TRAVIS_PULL_REQUEST_SHA: $(Build.SourceVersion)
  pool:
    vmImage: 'windows-latest'
  timeoutInMinutes: 360

  steps:
    - checkout: self
      persistCredentials: true
      path: enigma-dev
  
    - powershell: |
        Get-Service 'Windows Audio'
        Start-Service 'Windows Audio'
        Get-Service 'Windows Audio'
      displayName: 'Enable Windows Audio'
    - script: |
        (robocopy $(Build.SourcesDirectory) C:\enigma-dev /COPYALL /E) ^& IF %ERRORLEVEL% LEQ 1 exit 0
    #- script: |
    #    C:\msys64\msys2_shell.cmd -defterm -no-start -c "pacman -Sy --noconfirm --needed git make rsync mingw-w64-x86_64-toolchain mingw-w64-x86_64-boost mingw-w64-x86_64-pugixml mingw-w64-x86_64-rapidjson mingw-w64-x86_64-yaml-cpp mingw-w64-x86_64-grpc mingw-w64-x86_64-protobuf mingw-w64-x86_64-glm mingw-w64-x86_64-libpng mingw-w64-x86_64-re2 mingw-w64-x86_64-box2d mingw-w64-x86_64-libffi mingw-w64-x86_64-glew mingw-w64-x86_64-openal mingw-w64-x86_64-dumb mingw-w64-x86_64-alure mingw-w64-x86_64-libmodplug mingw-w64-x86_64-libvorbis mingw-w64-x86_64-libogg mingw-w64-x86_64-flac mingw-w64-x86_64-mpg123 mingw-w64-x86_64-libsndfile mingw-w64-x86_64-libgme mingw-w64-x86_64-SDL2 mingw-w64-x86_64-SDL2_mixer mingw-w64-x86_64-libepoxy mingw-w64-x86_64-gtest lcov mingw-w64-x86_64-mesa"
    #  displayName: Install mingw stuff
    #- script: |
    #    C:\msys64\msys2_shell.cmd -defterm -no-start -c "pacman -U --noconfirm https://mirror.msys2.org/mingw/mingw64/mingw-w64-x86_64-llvm-13.0.0-1-any.pkg.tar.zst"
    #- script: C:\msys64\msys2_shell.cmd -defterm -no-start -c "pacman -U --noconfirm https://mirror.msys2.org/mingw/mingw64/mingw-w64-x86_64-mesa-21.3.7-1-any.pkg.tar.zst"
    - script: .\enigma_bootstrap.bat
     displayName: Bootstrap enigma
    - script: |
        py -m pip install --upgrade Pillow
        C:\msys64\msys2_shell.cmd -defterm -mingw64 -no-start -here -lc "cp $MINGW_PREFIX/bin/opengl32.dll $TEMP/ && cp $MINGW_PREFIX/bin/libgallium_wgl.dll $TEMP/"
        d3dconfig device force-warp=true
        d3dconfig apps --add c:\msys64\tmp\
      displayName: 'install pillow and install llvmpipe'

    - script: C:\msys64\msys2_shell.cmd -defterm -mingw64 -no-start -c "mkdir test-harness-out"
      workingDirectory: C:\enigma-dev
      displayName: 'make runner'

    - script: |
        C:\msys64\msys2_shell.cmd -defterm -mingw64 -no-start -here -lc "pacman -Q"
    - script: C:\msys64\msys2_shell.cmd -defterm -mingw64 -no-start -here -lc "./test-runner.exe --gtest_filter=Regression.image_load_save_test --gtest_output=xml:test-harness-out/testout.xml"
      displayName: 'Run Test-Runner'
      workingDirectory: C:\enigma-dev
    - task: PublishBuildArtifacts@1
      displayName: 'Push Build Artifacts'
      inputs:
        pathtoPublish: 'C:\enigma-dev\test-harness-out\'
      condition: always()
